<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
      http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
      http://www.springframework.org/schema/context
      http://www.springframework.org/schema/context/spring-context.xsd
      http://www.springframework.org/schema/tx 
      http://www.springframework.org/schema/tx/spring-tx-3.0.xsd 
      http://www.springframework.org/schema/mvc
      http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">
      
      <!-- 数据库相关配置   使用 DBCP数据源 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${jdbc.task.driverClassName}" />
		<property name="url" value="${jdbc.task.url}" />
		<property name="username" value="${jdbc.task.username}" />
		<property name="password" value="${jdbc.task.password}" />
		<property name="defaultAutoCommit" value="false" />
		<!-- 两个配合，可以持续更新连接池中的连接对象，当timeBe* 大于0时，每过timeBe* 时间，-->
		<!-- 就会启动一个线程，校验连接池中闲置时间超过minEv*的连接对象 -->
		<property name="timeBetweenEvictionRunsMillis" value="3600000" />
		<property name="minEvictableIdleTimeMillis" value="3600000" />
	</bean>

	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate" scope="prototype">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<!-- 配置事务管理器 :spring参与MyBatis的事物管理-->
	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager" scope="prototype">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!-- 配置session工厂 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="configLocation" value="classpath:myBatis-config.xml" />
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- MyBatis映射自动扫描器配置 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer" scope="prototype">
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
		<property name="basePackage" value="utry.task" />
	</bean>
      
    <!-- 采用@Transactional注解方式使用事务   -->
	<tx:annotation-driven transaction-manager="txManager" />
</beans>
